#############################################################################
# Makefile for building: spp_cpp
# Generated by qmake (2.01a) (Qt 4.7.4) on: Mo. Dez 19 10:52:39 2011
# Project:  spp_cpp.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -ggdb -Wno-unused-but-set-variable -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Idebug
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = algos/DialDijkstra.cpp \
		algos/BHDijkstra.cpp \
		common/EdgeIterator.cpp \
		common/Timer.cpp \
		common/AdjacencyArray.cpp \
		common/Node.cpp \
		common/Edge.cpp \
		common/CalculationResult.cpp \
		common/BinaryHeap.cpp \
		Dijkstra.cpp 
OBJECTS       = debug/DialDijkstra.o \
		debug/BHDijkstra.o \
		debug/EdgeIterator.o \
		debug/Timer.o \
		debug/AdjacencyArray.o \
		debug/Node.o \
		debug/Edge.o \
		debug/CalculationResult.o \
		debug/BinaryHeap.o \
		debug/Dijkstra.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		spp_cpp.pro
QMAKE_TARGET  = spp_cpp
DESTDIR       = 
TARGET        = spp_cpp

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug spp_cpp.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/spp_cpp1.0.0 || $(MKDIR) debug/spp_cpp1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/spp_cpp1.0.0/ && $(COPY_FILE) --parents common/assert.hpp algos/BHDijkstra.hpp common/EdgeIterator.hpp Dijkstra.hpp common/Timer.hpp common/HeapItem.hpp common/CalculationResult.hpp algos/DialDijkstra.hpp common/BinaryHeap.hpp common/Node.hpp common/Edge.hpp common/AdjacencyArray.hpp debug/spp_cpp1.0.0/ && $(COPY_FILE) --parents algos/DialDijkstra.cpp algos/BHDijkstra.cpp common/EdgeIterator.cpp common/Timer.cpp common/AdjacencyArray.cpp common/Node.cpp common/Edge.cpp common/CalculationResult.cpp common/BinaryHeap.cpp Dijkstra.cpp debug/spp_cpp1.0.0/ && (cd `dirname debug/spp_cpp1.0.0` && $(TAR) spp_cpp1.0.0.tar spp_cpp1.0.0 && $(COMPRESS) spp_cpp1.0.0.tar) && $(MOVE) `dirname debug/spp_cpp1.0.0`/spp_cpp1.0.0.tar.gz . && $(DEL_FILE) -r debug/spp_cpp1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

debug/DialDijkstra.o: algos/DialDijkstra.cpp algos/DialDijkstra.hpp \
		common/CalculationResult.hpp \
		common/AdjacencyArray.hpp \
		common/Edge.hpp \
		common/Node.hpp \
		common/EdgeIterator.hpp \
		common/Timer.hpp \
		common/assert.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/DialDijkstra.o algos/DialDijkstra.cpp

debug/BHDijkstra.o: algos/BHDijkstra.cpp algos/BHDijkstra.hpp \
		common/CalculationResult.hpp \
		common/BinaryHeap.hpp \
		common/HeapItem.hpp \
		common/assert.hpp \
		common/AdjacencyArray.hpp \
		common/Edge.hpp \
		common/Node.hpp \
		common/EdgeIterator.hpp \
		common/Timer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/BHDijkstra.o algos/BHDijkstra.cpp

debug/EdgeIterator.o: common/EdgeIterator.cpp common/EdgeIterator.hpp \
		common/Edge.hpp \
		common/Node.hpp \
		common/AdjacencyArray.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/EdgeIterator.o common/EdgeIterator.cpp

debug/Timer.o: common/Timer.cpp common/Timer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Timer.o common/Timer.cpp

debug/AdjacencyArray.o: common/AdjacencyArray.cpp common/AdjacencyArray.hpp \
		common/Edge.hpp \
		common/Node.hpp \
		common/EdgeIterator.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/AdjacencyArray.o common/AdjacencyArray.cpp

debug/Node.o: common/Node.cpp common/Node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Node.o common/Node.cpp

debug/Edge.o: common/Edge.cpp common/Edge.hpp \
		common/Node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Edge.o common/Edge.cpp

debug/CalculationResult.o: common/CalculationResult.cpp common/CalculationResult.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/CalculationResult.o common/CalculationResult.cpp

debug/BinaryHeap.o: common/BinaryHeap.cpp common/BinaryHeap.hpp \
		common/HeapItem.hpp \
		common/assert.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/BinaryHeap.o common/BinaryHeap.cpp

debug/Dijkstra.o: Dijkstra.cpp algos/BHDijkstra.hpp \
		algos/DialDijkstra.hpp \
		common/AdjacencyArray.hpp \
		common/Edge.hpp \
		common/Node.hpp \
		common/EdgeIterator.hpp \
		common/CalculationResult.hpp \
		common/BinaryHeap.hpp \
		common/HeapItem.hpp \
		common/assert.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/Dijkstra.o Dijkstra.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

